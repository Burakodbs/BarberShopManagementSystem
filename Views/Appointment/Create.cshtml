@model BarberShopManagementSystem.Models.Appointment

@{
    ViewData["Title"] = "Create Appointment";
}

<h2 class="text-center mb-4 text-primary">Create Appointment</h2>

<div class="alert alert-info">
    <p>Please select a date and time for your appointment. Only available times are shown.</p>
</div>

<form asp-action="Create" method="post">
    <div class="form-group mb-3">
        <label asp-for="SalonId" class="control-label">Salon</label>
        <select asp-for="SalonId" class="form-control" asp-items="ViewBag.SalonId" id="SalonId" onchange="updateAvailableTimes()"></select>
        <span asp-validation-for="SalonId" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="ServiceId" class="control-label">Service</label>
        <select asp-for="ServiceId" class="form-control" asp-items="ViewBag.ServiceId"></select>
        <span asp-validation-for="ServiceId" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="EmployeeId" class="control-label">Employee</label>
        <select asp-for="EmployeeId" class="form-control" asp-items="ViewBag.EmployeeId"></select>
        <span asp-validation-for="EmployeeId" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label class="control-label">Appointment Date and Time</label>
        <div class="d-flex">
            <input type="date" class="form-control" id="AppointmentDate" min="@ViewBag.Today" onchange="updateAvailableTimes()" />
            <select class="form-control ms-2" id="AppointmentTime"></select>
        </div>
        <input type="hidden" id="RandevuZamani" name="RandevuZamani" />
        <span asp-validation-for="RandevuZamani" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <input type="submit" value="Create Appointment" class="btn btn-primary btn-lg" />
    </div>
</form>

<div class="mt-3">
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    <script>
                async function updateAvailableTimes() {
            const salonId = document.getElementById('SalonId').value;
            const employeeId = document.getElementById('EmployeeId').value;
            const date = document.getElementById('AppointmentDate').value;

            if (salonId && employeeId && date) {
                const response = await fetch(`/Appointment/GetAvailableTimes?salonId=${salonId}&employeeId=${employeeId}&date=${date}`);
                const times = await response.json();

                const timeDropdown = document.getElementById('AppointmentTime');
                timeDropdown.innerHTML = '';

                if (times.length === 0) {
                    const option = document.createElement('option');
                    option.value = '';
                    option.textContent = 'No available times - Employee not working';
                    timeDropdown.appendChild(option);
                } else {
                    times.forEach(time => {
                        const option = document.createElement('option');
                        option.value = time;
                        option.textContent = time;
                        timeDropdown.appendChild(option);
                    });
                }
            }
        }

        // Çalışan seçimi değiştiğinde de zamanları güncelle
        document.getElementById('EmployeeId').addEventListener('change', updateAvailableTimes);
    </script>
}
